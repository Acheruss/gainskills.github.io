<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dictionary on Blog - uTIcARdI</title><link>https://blog.gainskills.top/tags/dictionary/</link><description>Recent content in Dictionary on Blog - uTIcARdI</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 09 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.gainskills.top/tags/dictionary/index.xml" rel="self" type="application/rss+xml"/><item><title>get() in get() method of Pyhon dict</title><link>https://blog.gainskills.top/2019/01/19/get-in-dict-get/</link><pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2019/01/19/get-in-dict-get/</guid><description>Write down the tip for the practice: The Time in Words.
A dict was created for the time in number format to string format:
intToStrDict = { 1: &#39;one&#39;, 2: &#39;two&#39;, 3: &#39;three&#39;, 4: &#39;four&#39;, 5: &#39;five&#39;, 6: &#39;six&#39;, 7: &#39;seven&#39;, 8: &#39;eight&#39;, 9: &#39;nine&#39;, 10: &#39;ten&#39;, 11: &#39;eleven&#39;, 12: &#39;twelve&#39;, 13: &#39;thirteen&#39;, 14: &#39;fourteen&#39;, 15: &#39;quarter&#39;, 16: &#39;sixteen&#39;, 17: &#39;seventeen&#39;, 18: &#39;eighteen&#39;, 19: &#39;nineteen&#39;, 20: &#39;twenty&#39;, 30: &#39;half&#39;, 40: &#39;fourty&#39;, 50: &#39;fifty&#39; } get() is a good way get the value of a key from the dict, so I tried following function to convert minute in number format to string format:</description></item><item><title>Loop a dict to update the keys</title><link>https://blog.gainskills.top/2016/07/21/loop-a-dict-to-update-key/</link><pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate><guid>https://blog.gainskills.top/2016/07/21/loop-a-dict-to-update-key/</guid><description>Source dict:
{&#39;keyA&#39;: &#39;&#39;, &#39;keyB&#39;: &#39;&#39;} Expected dict:
{‘keyA/&#39;keyA&#39; :’’, keyA/keyB’ : ‘’} Code1:
keyPrefix = &#39;keyA&#39; for key, value in Dict.items(): newkey = &#39;/&#39;.join([keyPrefix, key]) Dict[newkey] = Dict.pop(key) Code2:
keyPrefix = &#39;keyA&#39; for key, value in Dict.keys(): newkey = &#39;/&#39;.join([keyPrefix, key]) Dict[newkey] = Dict.pop(key) Result of code1/code2 is:
{&#39;keyA/keyA/keyB&#39; : &#39;&#39;, &#39;keyA/keyA/keyA&#39;: &#39;&#39;} It doesn&amp;rsquo;t work as expected, and I found the case only exists when prefix is same to a key of the dict which means code1/code2 works well when the keyPrefix is neither ‘keyA’ nor ‘beyB’.</description></item></channel></rss>